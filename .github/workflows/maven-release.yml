name: Release with Maven

on:
  workflow_call:
    secrets:
      GPG_PRIVATE_KEY:
        required: false
      GPG_PASSPHRASE:
        required: false
      GPG_KEY:
        required: false
      OSS_USERNAME:
        required: false
      OSS_PASSWORD:
        required: false

jobs:
  release:
    if: github.ref_type == 'branch' && (github.ref_name == 'main' || startsWith(github.ref_name, 'snapshot-'))
    runs-on: ubuntu-latest
    steps:
      - name: Verify Parameter
        id: verify
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          CONTINUE=true
          [ -z "$GPG_PRIVATE_KEY" ] && echo "::warning title=Release with Maven::need secrets.GPG_PRIVATE_KEY" && CONTINUE=false
          [ -z "$GPG_PASSPHRASE" ] && echo "::warning title=Release with Maven::need secrets.GPG_PASSPHRASE" && CONTINUE=false
          echo "continue=$CONTINUE" >> $GITHUB_OUTPUT
      - name: Setup Maven
        if: steps.verify.outputs.continue == 'true'
        uses: dbstar-org/setup-maven@v1
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
      - name: Configure Git user
        if: steps.verify.outputs.continue == 'true'
        run: |
          git config --local user.name ${{ github.actor }}
          git config --local user.email ${{ github.actor }}@gmail.com
      - name: Configure Git Signing
        if: steps.verify.outputs.continue == 'true'
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}
        run: |
          [ -z "$GPG_KEY" ] && echo "::warning title=Release with Maven::add secrets.GPG_KEY to Signing on Git Commit and Tag" && exit 0
          git config --local user.signingkey $GPG_KEY
          git config --local commit.gpgsign true

      - name: Prepare Release
        if: steps.verify.outputs.continue == 'true'
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: mvn -B -U release:prepare -P release,distribution-github -DsignTag=true

      - name: Backup Release Properties
        if: steps.verify.outputs.continue == 'true'
        run: cp ${{ github.workspace }}/release.properties ${{ github.workspace }}/release.properties.bak

      - name: Perform Release to Github
        if: steps.verify.outputs.continue == 'true'
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: mvn -B -U release:perform -P release,distribution-github

      - name: Restore Release Properties from Backup
        if: steps.verify.outputs.continue == 'true'
        run: mv ${{ github.workspace }}/release.properties.bak ${{ github.workspace }}/release.properties

      - name: Perform Release to Ossrh
        if: steps.verify.outputs.continue == 'true'
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          OSS_USERNAME: ${{ secrets.OSS_USERNAME }}
          OSS_PASSWORD: ${{ secrets.OSS_PASSWORD }}
        run: |
          [ -z "$OSS_USERNAME" ] && echo "::notice title=Perform Release to Ossrh::add secrets.OSS_USERNAME to launch" && CONTINUE=false
          [ -z "$OSS_PASSWORD" ] && echo "::notice title=Perform Release to Ossrh::add secrets.OSS_PASSWORD to launch" && CONTINUE=false
          [ -z "$CONTINUE" ] || exit 0
          mvn -B -U release:perform -P release,distribution-ossrh
